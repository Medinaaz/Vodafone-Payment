# Generated by Django 3.0.1 on 2020-04-17 18:54

import basket.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedUsersRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_users', models.BooleanField(default=False, verbose_name='all users?')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='users')),
            ],
            options={
                'verbose_name': 'allowed users rule',
                'verbose_name_plural': 'allowed users rules',
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coupon_code', models.CharField(blank=True, max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=basket.models.get_random_code, max_length=12, unique=True, verbose_name='coupon code')),
                ('times_used', models.IntegerField(default=0, editable=False, verbose_name='times used')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'coupon',
                'verbose_name_plural': 'coupons',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0, verbose_name='value')),
                ('is_percentage', models.BooleanField(default=False, verbose_name='is percentage?')),
            ],
            options={
                'verbose_name': 'discount',
                'verbose_name_plural': 'discounts',
            },
        ),
        migrations.CreateModel(
            name='MaxUsesRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_uses', models.BigIntegerField(default=0, verbose_name='maximum uses')),
                ('is_infinite', models.BooleanField(default=False, verbose_name='infinite uses?')),
                ('uses_per_user', models.IntegerField(default=1, verbose_name='uses per user')),
            ],
            options={
                'verbose_name': 'max uses rule',
                'verbose_name_plural': 'max uses rules',
            },
        ),
        migrations.CreateModel(
            name='ValidityRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_date', models.DateTimeField(verbose_name='expiration date')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active?')),
            ],
            options={
                'verbose_name': 'validity rule',
                'verbose_name_plural': 'validity rules',
            },
        ),
        migrations.CreateModel(
            name='Ruleset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.AllowedUsersRule', verbose_name='allowed users rule')),
                ('max_uses', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.MaxUsesRule', verbose_name='max uses rule')),
                ('validity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.ValidityRule', verbose_name='validity rule')),
            ],
            options={
                'verbose_name': 'ruleset',
                'verbose_name_plural': 'rulesets',
            },
        ),
        migrations.CreateModel(
            name='CouponUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_used', models.IntegerField(default=0, editable=False, verbose_name='times used')),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.Coupon', verbose_name='coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'coupon user',
                'verbose_name_plural': 'coupon users',
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='discount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.Discount'),
        ),
        migrations.AddField(
            model_name='coupon',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.Ruleset', verbose_name='ruleset'),
        ),
        migrations.CreateModel(
            name='BasketItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('basket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basket.Basket')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
    ]
